생명주기가 끝난 함수를 참조하는 것을 클로저 함수라고 한다
: 이미 생명주기가 끝난 외부 함수의 변수를 참조하는 함수

참조하기 때문에 outerFunc이 사라지지가 않는 것

<자바스크립트 es6 문법>
변수선언 let, const 사용
const로 선언하면 값 변경불가
출력할 땐 console.log 똑같음

문자열 붙여서 쓸 때
const aa = "김은우";
let c = `안녕하세요 제 이름은 ${aa}`;(탭 위에 있는 키) //템플릿 문자열

변수 안에 있는 함수에 내용이 없을 때 익명함수라고 부른다
var a = function(a,b) {

}
let aa =(a,b) => {      } //화살표 함수(arrow function): 함수의 인자로 함수가 들어간 경우에 쓴다

.addEventListener('click',()=>{

}); -->화살표 함수는 이럴 때 사용

ctrl+백틱으로 터미널 창 실행

npm(node package manager) 필요한 기능을 가져올 수 있음(다운받아올 수 있음)
node js 받을때 기본적으로 설치됨

node js로 웹페이지 짤 때 사용하는 express 프레임 워크

폴더 생성 후,
1. npm init
2. name 입력
3. entry point: app.js 입력

<npm에서 여러가지 설치하는 방법>
npm i 패키지명 패키지명         -->i는 install의 i
패키지 ex: express  express-generator ejs morgan  
(express는 프레임워크를 사용하기 위해 깔았다고 생각하면 됨)      
(morgan은 잘못된 부분을 띄우기 위한 모듈)
(ejs란 템플릿 엔진, jsp 문법이랑 똑같다고 보면 됨. html과 똑같은데 자바스크립트 문법만 조금 추가한 것) 

npm i -g nodemon (g는 전역설치, 노드몬을 전역으로 설치하겠다는 것)
nodemon자동으로 껐다 켜주는 모듈임

app.js 파일은 중앙통제실 느낌
app.js 파일이 있는 곳에 public, routes, views 폴더 생성
view: 프론트에 대한 파일들이 들어감 
routes: ejs 파일을 실제로 화면에 띄워줄 수 있는 코드를 넣는 곳(특정 경로로 들어왔을 때 특정 경로로 들어갈 수 있게)

미들웨어란?
middle software
미들 소프트웨어 여러개가 모여 큰 소프트웨어를 만드는 것
클라이언트에게 요청이 오고 그 요청을 보내기 위해서 응답하려는 중간 목적지에 맞게
처리를 하는, 거쳐가는 함수들이라고 생각하면 된다
-->즉, 응답을 하기 위해서 거쳐가는 함수들

서버에 접근하려면 포트 번호가 필요함

req 요청경로, res 응답경로, next 다음경로








